version: '3.7'
services:
  http:
    image: nginx:latest
    depends_on:
      - web
      - api
    ports:
      - "80:80"
    volumes:
      - "docs:/home/documents"
      - "./docker/nginx/conf.d/general-configuration.conf:/etc/nginx/conf.d/general-configuration.conf"
      - "./docker/nginx/snippets/:/etc/nginx/snippets/"
      - "./docker/nginx/sites-available/readthedocs-main.conf:/etc/nginx/conf.d/default.conf"

  web:
    hostname: web
    build: .
    image: &img web
    depends_on:
      - db
      - es
      - redis
    ports:
      - "8001:8001"
    command: docker/gunicorn.sh collect ${GUNICORN_WEB_OPS} -w ${GUNICORN_WEB_WORKERS} -b 0.0.0.0:8001
    volumes:
      - ".:/app:rw"
      - "docs:/home/documents"
    env_file: .env

  api:
    hostname: api
    image: *img
    depends_on:
      - db
      - es
      - redis
    ports:
      - "8002:8002"
    command: docker/gunicorn.sh ${GUNICORN_WEB_OPS} -w ${GUNICORN_WEB_WORKERS} -b 0.0.0.0:8002
    volumes:
      - ".:/app:rw"
      - "docs:/home/documents"
    env_file: .env

  celery-web:
    hostname: celery
    image: *img
    depends_on:
      - web
    command: docker/celery.sh -A ${CELERY_APP} ${CELERY_WEB_OPTS} -l ${CELERY_LOGLEVEL}
    volumes:
      - ".:/app:rw"
      - "docs:/home/documents"
    env_file: .env

  celery-docs:
    hostname: docs
    image: *img
    depends_on:
      - web
    command: docker/celery.sh -A ${CELERY_APP} ${CELERY_DOCS_OPTS} -l ${CELERY_LOGLEVEL}
    volumes:
      - docs:/home/documents
    env_file: .env

  celery-build:
    hostname: build
    image: *img
    depends_on:
      - web
    command: docker/celery.sh -A ${CELERY_APP} ${CELERY_BUILD_OPTS} -l ${CELERY_LOGLEVEL}
    volumes:
      - ".:/app:rw"
      - "docs:/home/documents"
    env_file: .env

  db:
   image: postgres:10
   volumes:
    - dbdata

  es:
    image: elasticsearch:5.6
    volumes:
    - esdata

  redis:
    image: redis

volumes:
  docs:
  dbdata:
  esdata:
